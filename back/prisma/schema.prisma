// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  token     Token[]
  cart      Cart[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Token {
  id               Int      @id @default(autoincrement())
  user             User     @relation(fields: [userId], references: [id])
  userId           Int
  acessToken       String   @unique
  acessExpiresAt   DateTime
  refreshToken     String   @unique
  refreshExpiresAt DateTime
}

model Cart {
  id           Int        @id @default(autoincrement())
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  cartItems    Json[]
  restId       Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId Int
}

model Product {
  id              Int            @id @default(autoincrement())
  restaurant      Restaurant     @relation(fields: [restaurantId], references: [id])
  restaurantId    Int
  name            String
  description     String?
  price           Float
  attributes      Json?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  Menu_Category   Menu_Category? @relation(fields: [menu_CategoryId], references: [id])
  menu_CategoryId Int?
}

model Restaurant {
  id        Int        @id @default(autoincrement())
  name      String
  address   String?
  city      String?
  category  Category[]
  price     String?
  products  Product[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Cart      Cart[]
  Menu      Menu?
}

model Category {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  restaurants Restaurant[]
}

model Menu {
  id            Int             @id @default(autoincrement())
  restaurant    Restaurant      @relation(references: [id], fields: [restaurantId])
  restaurantId  Int             @unique
  menu_category Menu_Category[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Menu_Category {
  id        Int       @id @default(autoincrement())
  menu      Menu      @relation(fields: [menuId], references: [id])
  menuId    Int
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}
